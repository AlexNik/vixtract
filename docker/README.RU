# ViXtract
 ***
Удобный ETL инструмент с открытым исходным кодом на основе Python.

ViXtract – это сборка на основе популярных открытых инструментов обработки данных, которая помогает аналитикам BI самостоятельно выгружать, очищать и преобразовывать данные без помощи ETL разработчиков. Главные принципы ViXtract – удобство работы аналитика и неограниченные возможности развития. В основе ViXtract лежат три ключевых компонента: Jupyter - интерактивная среда для работы с Python, PETL – простая в освоении библиотека преобразования данных, Cronicle - планировщик с функциями мониторинга и оркестрации задач.

Сайт проекта - https://www.vixtract.ru

## Об этой сборке

* Сборка состоит из четырех компонентов в Docker контейнерах: PostgreSQL, JupyterHub, Cronicle, Nginx.
* Автоматизация настроек через скрипты отсутствует. Каждый компонент настраивается отдельно внутри, а разворачивается сборка стандартными командами Docker.
* Данная сборка в Docker пока не является полной заменой развертыванию на хосте напрямую. Основная цель здесь - упаковывание в Docker с сохранением самого важного функционала для работы.
* Пока это скорее демо версия, которая не предназнается для работы в продакшне. Перед использованием учтите имеющиеся на данный момент ограничения и отсутствующий функционал. Об это будем написано далее.


## Установка и запуск

1. Скачайте файл docker-stack.yml и перейдите в директорию с этим файлом.
2. Выполните команду: ``docker stack deploy --compose-file docker-stack.yml vixtract``
3. Должны запуститься четыре Docker контейнера. Сайт ViXtract доступен на порту 80 адреса сервера.


### Остальную информацию читайте в основном файле README.md.




## Начало работы






## Postgres

- Официальный образ без модификаций. Подробности тут https://github.com/docker-library/docs/blob/master/postgres/README.md
- Данные для подключения по умолчанию: БД postgres, postgres/vixtract.
- При первом запуске без файлов в /docker-volume/vixtract/postgres можно изменить дефолтный пароль для пользователя postgres в yml файле.
- При последующих запусках с сохраненными данными в /docker-volume/vixtract/postgresql изменение пароля в yml файле эффекта не оказывает. Используйте другие способы сменить пароль, например, команда в терминале:
docker exec vixtract-postgresql su postgres bash -c "psql -c \"ALTER USER postgres WITH PASSWORD 'some-password';\""
- При необходимости произведите дополнительную настройку под себя: создайте свои базы, пользователей, роли, права, назначьте правила подключения. Все делается стандартными средствами работы с СУБД PostgreSQL: psql, DBeaver, pgAdmin, конфиги /docker-volume/vixtract/postgres и т. д.
- Для повышения безопасности можно закрыть порт Docker контейнера. Для этого комментируются две строчки  yml файле и производится полный перезапуск с пересозданием контейнеров:
    #ports:
    #  - '5432:5432'
- Данные сохраняются на хост в дефолтную папку для томов Docker: /var/lib/docker/volumes/vixtract_postgresql
Подробности можно посмотреть в yml файле и в выводе docker volume inspect vixtract_postgresql


## Jupyter:

- В качестве базового слоя используется официальный образ ubuntu:22.04.
- В контейнер установлен python 3.10, jupyterhub, jupyterlab и набор Python библиотек.
- Создана системная учетка admin (пароль vixtract) и добавлена в список админов Jupyterhub.
- Учетка admin имеет права на запись в /usr/local/lib, что дает ей права ставить либы глобально.
- Создание дополнительных учеток можно производить из Jupyter Hub Control Panel, что ведет к запуску 
скрипта, создающего сразу учетку в Linux с паролем vixtract.
- Изменять пароли для учеток можно через Терминал в JupyterHub командой passwd.
- Все учетки, настройки JupyterHub, установленные библиотеки сохраняются в именованных томах:
/var/lib/docker/volumes/vixtract_jupyter...
- Обычные пользователи в JupyterHub могут ставить библиотеки в свою домашнюю директорию, поэтому они будут доступны только им самим. Для установки библиотеки глобально в /usr/local/lib для всех 
можно использовать терминал в JupyterHub от дефолтного пользователя admin.
- ---------------Проверить работу в Chronicle ноутбуков с разными либами ----------


## Cronicle

Ограничения:
- В данной инсталляции отсутвуют окружения conda и соответственно ядро в Jupyterhub всегда одно.
Поэтому возможны конфликты библиотек, установленных глобально админом.
- Эта сборка JupyterHub скорее является демонстрационной и сильно упрощенной и не претендует на то, чтобы
работать в продакшне и в больших командах. В планах перейти на более популярный и проверенный вариант https://github.com/jupyterhub/jupyterhub-deploy-docker, а для продакшна с большими нагрузками в дальнейшем k8s.


## Nginx

***

# Установка






# Настройка

## LDAP
