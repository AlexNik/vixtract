worker_processes  auto;

events {
    worker_connections  512;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    tcp_nopush     on;
    proxy_connect_timeout       1h;
    proxy_send_timeout          1h;
    proxy_read_timeout          1h;
    proxy_buffers               4 256k;
    proxy_buffer_size           128k;
    proxy_busy_buffers_size     256k;
    proxy_max_temp_file_size    0;
    client_max_body_size        0;
    client_body_buffer_size     128k;
    large_client_header_buffers 4 256k;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''   close;
    }

    # HTTPS server optimization section
    # This will create a cache shared between all worker processes
    #ssl_protocols TLSv1.3 TLSv1.2;
    #ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    #ssl_dhparam /etc/nginx/dhparam.pem;
    #ssl_ecdh_curve secp384r1;
    #ssl_session_timeout 5m;
    #ssl_session_cache shared:SSL:10m;
    #ssl_session_tickets off;
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    #add_header X-Frame-Options "SAMEORIGIN";
    #add_header X-Content-Type-Options nosniff;
    #add_header X-XSS-Protection "1; mode=block";

    # Redirect HTTP to HTTPS section
    #server {
    #   listen 80;
    #   return 301 https://$host$request_uri;
    #}


    server {
            listen 80;
            index index.html;
            #server_name test.ru
            root /var/www;

            # HTTPS section
            #listen 443 ssl http2;
            #ssl_certificate     /etc/nginx/fullchain.pem;
            #ssl_certificate_key /etc/nginx/privkey.pem;
            
            # add slash to the end to prevent errors on opening "/cronicle" instead of "/cronicle/"
            rewrite ^(/cronicle)$ $1/ permanent;


            location /jupyter {

                proxy_pass http://vixtract_jupyter:8000;
                proxy_redirect   off;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # websocket headers
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

            }

            # Work with / in the end only due to Cronicle internal pecularities.
            # To get rid of / in the end some modification in Cronicle are requirend - most likely in NodeJS.
            location  ~* ^/cronicle/ {
                
                rewrite /cronicle/(.*) /$1 break;
                proxy_pass http://vixtract_cronicle:3012;
                
				proxy_set_header Accept-Encoding ""; 
				proxy_set_header Host $host;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Real-IP $remote_addr;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				sub_filter_types *; 
				sub_filter_once off;
				sub_filter 'href="/' 'href="/cronicle/';
				sub_filter "href='/" "href='/cronicle/";
				sub_filter 'src="/'  'src="/cronicle/';
				sub_filter "src='/"  "src='/cronicle/";
				sub_filter 'url("/'  'url("/cronicle/';
				sub_filter "url('/"  "url('/cronicle/";
				sub_filter "url(/"   "url(/cronicle/";
                sub_filter "img.src = '/images/'" "img.src = '/cronicle/images/'";
				proxy_redirect off;
                }
                
            location ~* \.io {
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header Host $http_host;
				proxy_set_header X-NginX-Proxy false;
				proxy_pass http://vixtract_cronicle:3012;
				proxy_redirect off;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
			}
			location ~* ^/api/ {
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header Host $http_host;
				proxy_set_header X-NginX-Proxy false;
				proxy_pass http://vixtract_cronicle:3012;
				proxy_redirect off;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "upgrade";
				proxy_cache_bypass $http_upgrade;
			}

           } # End of server section
    


	} # End of http section